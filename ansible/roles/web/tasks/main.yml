---
- name: Allow haproxy stats port
  ufw: rule=allow port={{ item }}
  become: yes
  tags: ufw
  with_items:
    - "8000"

- name: Copy common secrets
  copy:
    src: /srv/secrets-newsblur/settings/common_settings.py
    dest: /srv/newsblur/newsblur_web/local_settings.py
  register: app_changed
  tags: env

- name: Copy app env
  copy:
    src: /srv/secrets-newsblur/settings/app_env.py
    dest: /srv/newsblur/newsblur_web/app_env.py

- name: Add SERVER_NAME to app env
  lineinfile:
    path: /srv/newsblur/newsblur_web/app_env.py
    line: 'SERVER_NAME = "{{ inventory_hostname }}"'

- name: Ensure static dir exists
  file:
    path: /srv/newsblur/static
    state: directory
  tags:
    - static

- name: "Write out ips from ansible inventory of all servers with app/node/www/task in name into addresses.txt file"
  template:
    src: ip_addresses.txt.j2
    dest: /srv/newsblur/apps/api/ip_addresses.txt
  tags:
    - inventory

- name: Prune docker
  become: yes
  community.docker.docker_prune:
    containers: yes
    images: yes
    builder_cache: yes
    timeout: 300
  tags:
    - prune
    - never

- name: Install pip
  become: yes
  apt: name=python3-pip state=latest
  tags:
    - static

- name: Install boto3 and botocore with pip3 module
  pip:
    name:
      - boto3
      - botocore
  tags:
    - static

- name: Update to latest NewsBlur Web Docker image
  become: yes
  docker_image:
    name: newsblur/newsblur_python3
    source: pull

- name: Start NewsBlur Web Docker container
  become: yes
  throttle: 3
  docker_container:
    name: newsblur_web
    image: newsblur/newsblur_python3
    container_default_behavior: no_defaults
    pull: yes
    env:
      DOCKERBUILD: ""
    state: started
    command: gunicorn --config /srv/newsblur/config/gunicorn_conf.py newsblur_web.wsgi:application
    hostname: "{{ inventory_hostname }}"
    log_driver: json-file
    log_options:
      max-size: 100m
    networks_cli_compatible: yes
    network_mode: default
    networks:
      - name: newsblurnet
    ports:
      - "8000:8000"
    restart_policy: unless-stopped
    user: 1000:1001
    volumes:
      - /srv/newsblur:/srv/newsblur

- name: Register web app in consul
  tags: consul
  become: yes
  template:
    src: consul_service.json
    dest: /etc/consul.d/newsblur_web.json
  when: disable_consul_services_ie_staging is not defined
  notify:
    - reload consul

- name: Setup logrotate
  become: yes
  copy: src=logrotate.conf dest=/etc/logrotate.d/newsblur mode=0755
  tags:
    - logrotate

- name: Force reload gunicorn
  debug:
    msg: Forcing reload...
  register: app_changed
  changed_when: true
  tags:
    - never
    - force

- name: Reload gunicorn
  debug:
    msg: Reloading gunicorn
  notify: reload gunicorn
  when: app_changed.changed
  changed_when: app_changed.changed
